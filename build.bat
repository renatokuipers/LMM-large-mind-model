@echo off
setlocal enabledelayedexpansion

REM ===================================================================
REM AgenDev Project Builder
REM This script creates the directory structure and placeholder files
REM for the AgenDev intelligent agentic development system.
REM ===================================================================

echo Creating AgenDev project structure...

REM Create main project directory
set PROJECT_ROOT=agendev
if not exist %PROJECT_ROOT% (
    mkdir %PROJECT_ROOT%
    echo Created main project directory: %PROJECT_ROOT%
) else (
    echo Project directory already exists: %PROJECT_ROOT%
)

cd %PROJECT_ROOT%

REM Create workspace directory as specified in the project vision
mkdir workspace
cd workspace

REM ===================================================================
REM Create main directory structure
REM ===================================================================

REM Create src directory for generated source code
mkdir src
echo # AgenDev Source Code > src\README.md
echo This directory contains the generated source code for the AgenDev project. >> src\README.md

REM Create artifacts directory and subdirectories
mkdir artifacts
mkdir artifacts\snapshots
mkdir artifacts\audio
mkdir artifacts\models

REM Create README files for artifacts directories
echo # System-Generated Resources > artifacts\README.md
echo This directory stores resources generated by the AgenDev system. >> artifacts\README.md

echo # Code Snapshots > artifacts\snapshots\README.md
echo This directory contains code snapshots for local version control. >> artifacts\snapshots\README.md

echo # Voice Feedback and Summaries > artifacts\audio\README.md
echo This directory stores TTS-generated audio files for voice feedback. >> artifacts\audio\README.md

echo # Context and Memory Models > artifacts\models\README.md
echo This directory contains embedding-based models for context management. >> artifacts\models\README.md

REM Create planning directory and subdirectories
mkdir planning
mkdir planning\search_trees
mkdir planning\pathfinding
mkdir planning\simulations

REM Create planning files
echo { "epics": [] } > planning\epics.json
echo { "tasks": [] } > planning\tasks.json
echo # AgenDev Implementation Roadmap > planning\roadmap.md
echo This document outlines the implementation timeline for the AgenDev project. >> planning\roadmap.md

REM Create README files for planning subdirectories
echo # Monte Carlo Tree Search Data > planning\search_trees\README.md
echo This directory stores MCTS simulation data for probabilistic planning. >> planning\search_trees\README.md

echo # A* Planning Results > planning\pathfinding\README.md
echo This directory contains A* pathfinding results for optimal task sequencing. >> planning\pathfinding\README.md

echo # Outcome Probabilities > planning\simulations\README.md
echo This directory stores simulation data for outcome probability modeling. >> planning\simulations\README.md

REM Create progress directory and subdirectories
mkdir progress
mkdir progress\history

REM Create progress files
echo # Current Project State > progress\current.md
echo This document tracks the current state of the AgenDev project. >> progress\current.md

echo { "metrics": [] } > progress\metrics.json

echo # Historical Progress Snapshots > progress\history\README.md
echo This directory contains historical snapshots of project progress. >> progress\history\README.md

REM Create quality directory and subdirectories
mkdir quality
mkdir quality\tests
mkdir quality\reviews
mkdir quality\benchmarks

REM Create README files for quality subdirectories
echo # Generated Tests > quality\tests\README.md
echo This directory contains automatically generated unit and integration tests. >> quality\tests\README.md

echo # Implementation Reviews > quality\reviews\README.md
echo This directory stores LLM-generated code reviews. >> quality\reviews\README.md

echo # Performance Benchmarks > quality\benchmarks\README.md
echo This directory contains performance benchmarking results. >> quality\benchmarks\README.md

REM ===================================================================
REM Create placeholder files for core modules
REM ===================================================================

REM Create core implementation files outside the workspace structure
mkdir ..\src
mkdir ..\src\agendev
echo # AgenDev Core Modules > ..\src\agendev\README.md
echo This directory contains the core modules for the AgenDev system. >> ..\src\agendev\README.md

REM Create __init__.py to make it a proper package
echo # AgenDev Package > ..\src\agendev\__init__.py
echo """AgenDev: An Intelligent Agentic Development System.""" >> ..\src\agendev\__init__.py

REM Create placeholder for main AgenDev class
echo # AgenDev Core Class > ..\src\agendev\core.py
echo """Core orchestration module for AgenDev system.""" >> ..\src\agendev\core.py
echo # Main AgenDev class will be implemented here >> ..\src\agendev\core.py

REM Create placeholder files for each core component
echo # LLM Integration Hub > ..\src\agendev\llm_integration.py
echo """Enhanced LLM client for diverse query types and context management.""" >> ..\src\agendev\llm_integration.py

echo # TTS Notification System > ..\src\agendev\tts_notification.py
echo """Voice-based notification system using TTSClient.""" >> ..\src\agendev\tts_notification.py

echo # Search Algorithm Engine > ..\src\agendev\search_algorithms.py
echo """Implementation of MCTS and A* for development planning.""" >> ..\src\agendev\search_algorithms.py

echo # Probability Modeling Service > ..\src\agendev\probability_modeling.py
echo """Bayesian models for task completion probability.""" >> ..\src\agendev\probability_modeling.py

echo # Context Management Service > ..\src\agendev\context_management.py
echo """Embedding-based code representation and relationship mapping.""" >> ..\src\agendev\context_management.py

echo # Differential Snapshot Engine > ..\src\agendev\snapshot_engine.py
echo """Binary differential storage for local version control.""" >> ..\src\agendev\snapshot_engine.py

echo # Adaptive Parameter Controller > ..\src\agendev\parameter_controller.py
echo """Dynamic adjustment of LLM parameters based on task type.""" >> ..\src\agendev\parameter_controller.py

echo # Test Generation Module > ..\src\agendev\test_generation.py
echo """Automatic generation of unit and integration tests.""" >> ..\src\agendev\test_generation.py

REM Create utils directory for helper functions
mkdir ..\src\agendev\utils
echo # Utility Functions > ..\src\agendev\utils\__init__.py
echo """Utility functions for the AgenDev system.""" >> ..\src\agendev\utils\__init__.py

echo # File System Utilities > ..\src\agendev\utils\fs_utils.py
echo """File system utilities for AgenDev.""" >> ..\src\agendev\utils\fs_utils.py

echo # Visualization Utilities > ..\src\agendev\utils\visualization.py
echo """Visualization utilities for planning algorithms.""" >> ..\src\agendev\utils\visualization.py

REM Create models directory for data models
mkdir ..\src\agendev\models
echo # Data Models > ..\src\agendev\models\__init__.py
echo """Pydantic models for AgenDev data structures.""" >> ..\src\agendev\models\__init__.py

echo # Task Models > ..\src\agendev\models\task_models.py
echo """Pydantic models for tasks, epics, and dependencies.""" >> ..\src\agendev\models\task_models.py

echo # Planning Models > ..\src\agendev\models\planning_models.py
echo """Pydantic models for planning and simulation data.""" >> ..\src\agendev\models\planning_models.py

REM Copy existing modules from root (if they exist)
if exist ..\..\llm_module.py (
    copy ..\..\llm_module.py ..\src\agendev\
    echo Copied existing llm_module.py to src\agendev\
)

if exist ..\..\tts_module.py (
    copy ..\..\tts_module.py ..\src\agendev\
    echo Copied existing tts_module.py to src\agendev\
)

REM Create setup.py for package installation
echo # Setup Configuration > ..\setup.py
echo """
from setuptools import setup, find_packages

setup(
    name="agendev",
    version="0.1.0",
    packages=find_packages(where="src"),
    package_dir={"": "src"},
    install_requires=[
        "requests",
        "pydantic>=2.0.0",
        "numpy",
        "soundfile",
        "sounddevice",
    ],
    python_requires=">=3.8",
)
""" > ..\setup.py

REM Create requirements.txt
echo # Dependencies > ..\requirements.txt
echo requests >> ..\requirements.txt
echo pydantic^=2.0.0 >> ..\requirements.txt
echo numpy >> ..\requirements.txt
echo soundfile >> ..\requirements.txt
echo sounddevice >> ..\requirements.txt

REM Create README.md for the project
echo # AgenDev: An Intelligent Agentic Development System > ..\README.md
echo. >> ..\README.md
echo A comprehensive AI-powered development system that transforms complex projects into manageable, progressive implementations through advanced probabilistic planning and rich multi-modal feedback. >> ..\README.md
echo. >> ..\README.md
echo ## Getting Started >> ..\README.md
echo. >> ..\README.md
echo 1. Install dependencies: `pip install -r requirements.txt` >> ..\README.md
echo 2. Install package in development mode: `pip install -e .` >> ..\README.md
echo 3. See documentation for further instructions >> ..\README.md

REM Return to the main project directory
cd ..\..

echo.
echo AgenDev project structure has been created successfully!
echo.
echo Main project code: %cd%\src\agendev\
echo Workspace structure: %cd%\agendev\workspace\
echo.
echo Next steps:
echo 1. Install dependencies: pip install -r requirements.txt
echo 2. Install package in development mode: pip install -e .
echo 3. Start implementing the core modules

endlocal